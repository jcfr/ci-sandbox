version: 2

references:

  ci_steps: &ci_steps
    working_directory: /work
    steps:
      - checkout
      - run:
          name: Run CI
          command: |
            #
            # Set UPLOAD_SDIST environment variable
            #
            export UPLOAD_SDIST=$(echo ${CIRCLE_JOB} | cut -d"_" -f3)
            echo "UPLOAD_SDIST [${UPLOAD_SDIST}]"
            #
            # Set MANYLINUX_PYTHON
            #
            export MANYLINUX_PYTHON=$(echo ${CIRCLE_JOB} | cut -d"_" -f2)
            echo "MANYLINUX_PYTHON [${MANYLINUX_PYTHON}]"
            #
            # Build sdist and wheel
            #
            export PATH=/opt/python/${MANYLINUX_PYTHON}/bin:${PATH}
            python setup.py sdist bdist_wheel
            #
            # if it applies, remove source distribution
            #
            if [[ $UPLOAD_SDIST == "" ]]
            then
              echo "Deleting source distribution"
              rm -f dist/*.tar.gz
            fi
      - run:
          name: Repair wheels
          command: |
            #
            # Set MANYLINUX_PYTHON
            #
            export MANYLINUX_PYTHON=$(echo ${CIRCLE_JOB} | cut -d"_" -f2)
            echo "MANYLINUX_PYTHON [${MANYLINUX_PYTHON}]"
            #
            export PATH=/opt/python/${MANYLINUX_PYTHON}/bin:${PATH}
            # Since there are no external shared libraries to bundle into the wheels
            # this step will fixup the wheel switching from 'linux' to 'manylinux1' tag
            for whl in dist/*$(python -c "import wheel.pep425tags as w; print(w.get_platform())").whl; do
                auditwheel repair $whl -w ./dist/
                rm $whl
            done
      - run:
          name: install "ctest_junit_formatter" prerequisites
          command: |
            #
            # Set MANYLINUX_PYTHON
            #
            export MANYLINUX_PYTHON=$(echo ${CIRCLE_JOB} | cut -d"_" -f2)
            echo "MANYLINUX_PYTHON [${MANYLINUX_PYTHON}]"
            #
            export PATH=/opt/python/${MANYLINUX_PYTHON}/bin:${PATH}
            git clone git://github.com/scikit-build/scikit-ci-addons -b master
            pip install -r ./scikit-ci-addons/requirements.txt
            pip install ./scikit-ci-addons
      - run:
          name: run "ctest_junit_formatter"
          command: |
            #
            # Set MANYLINUX_PYTHON
            #
            export MANYLINUX_PYTHON=$(echo ${CIRCLE_JOB} | cut -d"_" -f2)
            echo "MANYLINUX_PYTHON [${MANYLINUX_PYTHON}]"
            #
            export PATH=/opt/python/${MANYLINUX_PYTHON}/bin:${PATH}
            mkdir -p ~/ctest-reports
            (cd case0; ci_addons ctest_junit_formatter $(pwd) > ~/ctest-reports/JUnit-${CIRCLE_NODE_INDEX}.xml)
            (cd case1; ci_addons ctest_junit_formatter $(pwd) > ~/ctest-reports/JUnit-1.xml)
      - store_test_results:
          path: ~/ctest-reports

      - persist_to_workspace:
          root: ./
          paths:
            - dist

  x64_build_job: &x64_build_job
    docker:
      - image: dockcross/manylinux-x64
    <<: *ci_steps

  no_filters: &no_filters
    filters:
      tags:
        only: /.*/

jobs:

  # x64
  manylinux-x64_cp27-cp27m:
    <<: *x64_build_job
  manylinux-x64_cp27-cp27mu:
    <<: *x64_build_job
  manylinux-x64_cp34-cp34m:
    <<: *x64_build_job
  manylinux-x64_cp35-cp35m:
    <<: *x64_build_job
  manylinux-x64_cp36-cp36m:
    <<: *x64_build_job
  manylinux-x64_cp37-cp37m_upload-sdist:
    <<: *x64_build_job

  # x86
  # NA

  deploy-master:
    docker:
      - image: circleci/python:3.7.0-stretch
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Deploy master
          command: |
            echo "Deploy master (not implemented)"

  deploy-release:
    docker:
      - image: circleci/python:3.7.0-stretch
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Deploy release
          command: |
            echo "Deploy release"
            python -m venv ../venv
            . ../venv/bin/activate
            pip install twine
            ls dist
            twine upload -u $PYPI_USER -p $PYPI_PASSWORD --repository-url https://test.pypi.org/legacy/ dist/*

workflows:
  version: 2
  build-test-deploy:
    jobs:
      # x64
      - manylinux-x64_cp27-cp27m:
          <<: *no_filters
      - manylinux-x64_cp27-cp27mu:
          <<: *no_filters
      - manylinux-x64_cp34-cp34m:
          <<: *no_filters
      - manylinux-x64_cp35-cp35m:
          <<: *no_filters
      - manylinux-x64_cp36-cp36m:
          <<: *no_filters
      - manylinux-x64_cp37-cp37m_upload-sdist:
          <<: *no_filters
      # x86
      # NA

      - deploy-master:
          requires:
            # x64
            - manylinux-x64_cp27-cp27m
            - manylinux-x64_cp27-cp27mu
            - manylinux-x64_cp34-cp34m
            - manylinux-x64_cp35-cp35m
            - manylinux-x64_cp36-cp36m
            - manylinux-x64_cp37-cp37m_upload-sdist
            # x86
            # NA
          filters:
            branches:
              only: master
      - deploy-release:
          requires:
            # x64
            - manylinux-x64_cp27-cp27m
            - manylinux-x64_cp27-cp27mu
            - manylinux-x64_cp34-cp34m
            - manylinux-x64_cp35-cp35m
            - manylinux-x64_cp36-cp36m
            - manylinux-x64_cp37-cp37m_upload-sdist
            # x86
            # NA
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(\.post[0-9]+)?$/
            branches:
              ignore: /.*/
