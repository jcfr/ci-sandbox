name: Build, test, package

on: [push,pull_request]

jobs:
  build-linux-python-packages:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 2
      matrix:
        python-version: [35, 36, 37, 38]
#        include:
#          - itk-python-git-tag: "v5.1.0.post3"

    steps:
    - uses: actions/checkout@v2

#    - name: 'Free up disk space'
#      run: |
#        # Workaround for https://github.com/actions/virtual-environments/issues/709
#        df -h
#        sudo apt-get clean
#        sudo rm -rf "/usr/local/share/boost"
#        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
#        df -h

#    - name: 'Fetch build script'
#      run: |
#        curl -L https://raw.githubusercontent.com/InsightSoftwareConsortium/ITKPythonPackage/master/scripts/dockcross-manylinux-download-cache-and-build-module-wheels.sh -O
#        chmod u+x dockcross-manylinux-download-cache-and-build-module-wheels.sh

    - name: 'Build üêç Python üì¶ package'
      run: |
        echo "cp${{ matrix.python-version }}"
#        export ITK_PACKAGE_VERSION=${{ matrix.itk-python-git-tag }}
#        ./dockcross-manylinux-download-cache-and-build-module-wheels.sh cp${{ matrix.python-version }}

#    - name: Publish Python package as GitHub Artifact
#      uses: actions/upload-artifact@v1
#      with:
#        name: LinuxWheel${{ matrix.python-version }}
#        path: dist

  build-macos-python-packages:
    runs-on: macos-10.15
    strategy:
      max-parallel: 2
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Display pip version
      run: pip --version

    - name: Install Prerequisites
      run: |
        python -m pip install --disable-pip-version-check --upgrade pip
        pip install git+https://github.com/jcfr/wheeltools.git@wheeltools-2018-10-28-a2f174d0e
        pip install -U -r requirements-dev.txt

    - name: 'Build üêç Python üì¶ package'
      run: |
        echo "cp${{ matrix.python-version }}"
#        export ITK_PACKAGE_VERSION=${{ matrix.itk-python-git-tag }}
#        export MACOSX_DEPLOYMENT_TARGET=10.9
#        ./macpython-download-cache-and-build-module-wheels.sh

#    - name: Publish Python package as GitHub Artifact
#      uses: actions/upload-artifact@v1
#      with:
#        name: MacOSWheels
#        path: dist

  build-windows-python-packages:
    runs-on: windows-2019
    strategy:
      max-parallel: 2
      matrix:
        python-version-minor: [5, 6, 7, 8]
#        include:
#          - itk-python-git-tag: "v5.1.0.post3"

    steps:
    - uses: actions/checkout@v2
      with:
        path: "im"


    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Display pip version
      run: pip --version

    - name: Install Prerequisites
      run: |
        python -m pip install --disable-pip-version-check --upgrade pip
        pip install git+https://github.com/jcfr/wheeltools.git@wheeltools-2018-10-28-a2f174d0e
        pip install -U -r requirements-dev.txt

#    - name: 'Install Python'
#      run: |
#        $pythonArch = "64"
#        $pythonVersion = "3.${{ matrix.python-version-minor }}"
#        iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/scikit-build/scikit-ci-addons/master/windows/install-python.ps1'))

#    - name: 'Fetch build dependencies'
#      shell: bash
#      run: |
#        mv im ../../
#        cd ../../
#        curl -L "https://github.com/InsightSoftwareConsortium/ITKPythonBuilds/releases/download/${{ matrix.itk-python-git-tag }}/ITKPythonBuilds-windows.zip" -o "ITKPythonBuilds-windows.zip"
#        7z x ITKPythonBuilds-windows.zip -o/c/P -aoa -r
#        curl -L "https://data.kitware.com/api/v1/file/5c0ad59d8d777f2179dd3e9c/download" -o "doxygen-1.8.11.windows.bin.zip"
#        7z x doxygen-1.8.11.windows.bin.zip -o/c/P/doxygen -aoa -r
#        curl -L "https://data.kitware.com/api/v1/file/5bbf87ba8d777f06b91f27d6/download/grep-win.zip" -o "grep-win.zip"
#        7z x grep-win.zip -o/c/P/grep -aoa -r

    - name: 'Build üêç Python üì¶ package'
      shell: cmd
      run: |
        echo "3${{ matrix.python-version-minor }}-x64"
#        cd ../../im
#        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
#        set PATH="C:\P\grep;%PATH%"
#        set CC=cl.exe
#        set CXX=cl.exe
#        C:\Python3${{ matrix.python-version-minor }}-x64\python.exe C:\P\IPP\scripts\windows_build_module_wheels.py --py-envs "3${{ matrix.python-version-minor }}-x64" --no-cleanup

#    - name: Publish Python package as GitHub Artifact
#      uses: actions/upload-artifact@v1
#      with:
#        name: WindowWheel3.${{ matrix.python-version-minor }}
#        path: ../../im/dist

  publish-python-packages-to-pypi:
    needs:
      - build-linux-python-packages
      - build-macos-python-packages
      - build-windows-python-packages
    runs-on: ubuntu-18.04

    steps:
    - name: Download Python Packages
      uses: actions/download-artifact@v2

    - name: Prepare packages for upload
      run: |
        ls -R
        for d in */; do
          mv ${d}/*.whl .
        done
        mkdir dist
#        mv *.whl dist/
#        ls dist

#    - name: Publish üêç Python üì¶ package to PyPI
#      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
#      uses: pypa/gh-action-pypi-publish@master
#      with:
#        user: __token__
#        password: ${{ secrets.pypi_password }}

