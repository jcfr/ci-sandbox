name: Build, test, package

on: [push,pull_request]

jobs:
  build-linux-python-packages:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 2
      matrix:
        python-version: [35, 36, 37, 38]
#        include:
#          - itk-python-git-tag: "v5.1.0.post3"

    steps:
    - uses: actions/checkout@v2

#    - name: 'Free up disk space'
#      run: |
#        # Workaround for https://github.com/actions/virtual-environments/issues/709
#        df -h
#        sudo apt-get clean
#        sudo rm -rf "/usr/local/share/boost"
#        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
#        df -h

#    - name: 'Fetch build script'
#      run: |
#        curl -L https://raw.githubusercontent.com/InsightSoftwareConsortium/ITKPythonPackage/master/scripts/dockcross-manylinux-download-cache-and-build-module-wheels.sh -O
#        chmod u+x dockcross-manylinux-download-cache-and-build-module-wheels.sh

    - name: 'Build üêç Python üì¶ package'
      run: |
        echo "cp${{ matrix.python-version }}"
#        export ITK_PACKAGE_VERSION=${{ matrix.itk-python-git-tag }}
#        ./dockcross-manylinux-download-cache-and-build-module-wheels.sh cp${{ matrix.python-version }}

#    - name: Publish Python package as GitHub Artifact
#      uses: actions/upload-artifact@v1
#      with:
#        name: LinuxWheel${{ matrix.python-version }}
#        path: dist

  build-macos-python-packages:
    runs-on: macos-10.15
    strategy:
      max-parallel: 2
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
        include:
          - SETUP_BDIST_WHEEL_ARGS: "--plat-name macosx-10.6-x86_64"
          - SETUP_CMAKE_ARGS:

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python and pip versions
      run: |
        python -c "import sys; print(sys.version)"
        pip --version

    - name: Install Prerequisites
      run: |
        pip install git+https://github.com/jcfr/wheeltools.git@wheeltools-2018-10-28-a2f174d0e
        pip install -U -r requirements-dev.txt

    - name: Build sdist
      run: python setup.py --hide-listing sdist

    - name: Build wheel
      run: python setup.py --hide-listing bdist_wheel ${{ matrix.SETUP_BDIST_WHEEL_ARGS }} -- ${{ matrix.SETUP_CMAKE_ARGS }}

    - name: Publish Python package as GitHub Artifact
      uses: actions/upload-artifact@v1
      with:
        name: MacOSWheels${{ matrix.python-version }}
        path: dist

  build-windows-python-packages:
    runs-on: windows-2019
    strategy:
      max-parallel: 2
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
        include:
          - SETUP_BDIST_WHEEL_ARGS:
          - SETUP_CMAKE_ARGS:

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python and pip versions
      run: |
        python -c "import sys; print(sys.version)"
        pip --version

    - name: Install Prerequisites
      run: |
        pip install git+https://github.com/jcfr/wheeltools.git@wheeltools-2018-10-28-a2f174d0e
        pip install -U -r requirements-dev.txt

    - name: Build sdist
      run: python setup.py --hide-listing sdist

    - name: Build wheel
      run: python setup.py --hide-listing bdist_wheel ${{ matrix.SETUP_BDIST_WHEEL_ARGS }} -- ${{ matrix.SETUP_CMAKE_ARGS }}

    - name: Publish Python package as GitHub Artifact
      uses: actions/upload-artifact@v1
      with:
        name: WindowWheel${{ matrix.python-version }}
        path: dist

  publish-python-packages-to-pypi:
    needs:
      - build-linux-python-packages
      - build-macos-python-packages
      - build-windows-python-packages
    runs-on: ubuntu-18.04

    steps:
    - name: Download Python Packages
      uses: actions/download-artifact@v2

    - name: Prepare packages for upload
      run: |
        ls -R
        for d in */; do
          mv ${d}/*.whl .
        done
        mkdir dist
        mv *.whl dist/
        ls dist

#    - name: Publish üêç Python üì¶ package to PyPI
#      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
#      uses: pypa/gh-action-pypi-publish@master
#      with:
#        user: __token__
#        password: ${{ secrets.pypi_password }}

